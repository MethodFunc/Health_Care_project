<main role="main" class="inner cover">
    <h1>DashBoard</h1>
    <div class="container"> <canvas id="myChart"></canvas>
    </div>
    <p style="color:white" id="date_ids"> adsf </p>


<!--    <svg width="960" height="500"></svg>-->
    <script>
        // https://console.firebase.google.com/project/[your_project_name]/settings/general
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth()+1; //January is 0!
        var yyyy = today.getFullYear();
        if(dd<10) {
            dd='0'+dd
        }
        if(mm<10) {
            mm='0'+mm
        }
        today = String(yyyy)+ String(mm)+ String(dd);

        // Your web app's Firebase configuration
        // For Firebase JS SDK v7.20.0 and later, measurementId is optional
        var firebaseConfig = {
            apiKey: "AIzaSyB72klvRp9TjHhczFMAMM8FGOhaTLhKHFc",
            authDomain: "train-5772b.firebaseapp.com",
            databaseURL: "https://train-5772b.firebaseio.com",
            projectId: "train-5772b",
            storageBucket: "train-5772b.appspot.com",
            messagingSenderId: "874170495915",
            appId: "1:874170495915:web:92c0dbec429da4161658ee",
            measurementId: "G-0T8VVPG5BV"
        };
        // // Initialize Firebase
        firebase.initializeApp(firebaseConfig);
        firebase.analytics();

        const db = firebase.firestore();
        const dbref = db.collection('hca');


        dbref.get().then(function(querySnapshot){
            var last_data = new Array();
            var date_id = new Array();
            querySnapshot.forEach(function(doc) {
                // doc.data() is never undefined for query doc snapshots
                // console.log("doc data =>", doc.data());
                // console.log("last_data =>", last_data)
                // console.log(doc.id);
                date_id.push(doc.id);
                last_data.push(doc.data());
            });


            var labels = new Array();
            var datas = new Array();
            var last_value = last_data.length;
            last_data.sort();
            // console.log(last_value);
            console.log(JSON.stringify(last_data[last_value-1]));
            const order_last_data = {};
            Object.keys(last_data[last_value-1]).sort().forEach(function (key) {
                order_last_data[key] = last_data[last_value-1][key];
            })

            console.log(order_last_data);

            for(var key in order_last_data)
                {
                    // console.log("key =>", key);
                    // console.log("Values =>", last_data[last_value-1][key]);
                    labels.push(key);
                    datas.push(order_last_data[key]);
                }

            var doc_id = date_id[last_value-1];
            var date_ids = document.getElementById('date_ids').innerHTML = doc_id;


            var ctx = document.getElementById('myChart').getContext('2d');
            var chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: doc_id,
                        data: datas,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.3)',
                            'rgba(54, 162, 235, 0.3)',
                            'rgba(255, 206, 86, 0.3)',
                            'rgba(75, 192, 192, 0.3)',
                            'rgba(153, 102, 255, 0.3)',
                            'rgba(255, 159, 64, 0.3)'
                        ],
                        borderColor: [
                            'rgba(255,99,132,1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        // borderWidth: 1,

                    }]
                },
                options: {
                    scales: {
                        xAxes:[{
                            display: true,
                            ticks:{
                                fontColor: 'rgba(255, 255, 255, 0.8)'
                            },
                            gridLines: {
                                color:'rgba(255, 255, 255, 0.5)'

                            }
                        }],
                        yAxes: [{
                            display: true,
                            ticks: {
                                beginAtZero: true,
                                min:0,
                                stepSize:2,
                                fontColor: 'rgba(255, 255, 255, 0.8)'
                            },
                            gridLines:{
                                color:'rgba(255, 255, 255, 0.5)'
                            }
                        }]
                    },
                    legend:{
                        labels: {
                            fontColor : 'white'
                        }
                    }
                }
            });

            console.log(last_data);


        });



    </script>
</main>
<%- include('../part/footer')%>
</div>

